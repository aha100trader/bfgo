// Code generated by protoc-gen-go.
// source: bfcta.proto
// DO NOT EDIT!

/*
Package bfcta is a generated protocol buffer package.

It is generated from these files:
	bfcta.proto

It has these top-level messages:
*/
package bfcta

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bfgateway "github.com/sunwangme/bfgo/api/bfgateway"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for BfCtaService service

type BfCtaServiceClient interface {
	// 请求push
	ConnectPush(ctx context.Context, in *bfgateway.BfConnectPushReq, opts ...grpc.CallOption) (BfCtaService_ConnectPushClient, error)
	// 断开push
	DisconnectPush(ctx context.Context, in *bfgateway.BfVoid, opts ...grpc.CallOption) (*bfgateway.BfVoid, error)
	// 活跃检测=
	Ping(ctx context.Context, in *bfgateway.BfPingData, opts ...grpc.CallOption) (*bfgateway.BfPingData, error)
	// 开始cta
	Start(ctx context.Context, in *bfgateway.BfVoid, opts ...grpc.CallOption) (*bfgateway.BfVoid, error)
	// 停止cta
	Stop(ctx context.Context, in *bfgateway.BfVoid, opts ...grpc.CallOption) (*bfgateway.BfVoid, error)
}

type bfCtaServiceClient struct {
	cc *grpc.ClientConn
}

func NewBfCtaServiceClient(cc *grpc.ClientConn) BfCtaServiceClient {
	return &bfCtaServiceClient{cc}
}

func (c *bfCtaServiceClient) ConnectPush(ctx context.Context, in *bfgateway.BfConnectPushReq, opts ...grpc.CallOption) (BfCtaService_ConnectPushClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_BfCtaService_serviceDesc.Streams[0], c.cc, "/bfcta.BfCtaService/ConnectPush", opts...)
	if err != nil {
		return nil, err
	}
	x := &bfCtaServiceConnectPushClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BfCtaService_ConnectPushClient interface {
	Recv() (*google_protobuf.Any, error)
	grpc.ClientStream
}

type bfCtaServiceConnectPushClient struct {
	grpc.ClientStream
}

func (x *bfCtaServiceConnectPushClient) Recv() (*google_protobuf.Any, error) {
	m := new(google_protobuf.Any)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bfCtaServiceClient) DisconnectPush(ctx context.Context, in *bfgateway.BfVoid, opts ...grpc.CallOption) (*bfgateway.BfVoid, error) {
	out := new(bfgateway.BfVoid)
	err := grpc.Invoke(ctx, "/bfcta.BfCtaService/DisconnectPush", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bfCtaServiceClient) Ping(ctx context.Context, in *bfgateway.BfPingData, opts ...grpc.CallOption) (*bfgateway.BfPingData, error) {
	out := new(bfgateway.BfPingData)
	err := grpc.Invoke(ctx, "/bfcta.BfCtaService/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bfCtaServiceClient) Start(ctx context.Context, in *bfgateway.BfVoid, opts ...grpc.CallOption) (*bfgateway.BfVoid, error) {
	out := new(bfgateway.BfVoid)
	err := grpc.Invoke(ctx, "/bfcta.BfCtaService/Start", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bfCtaServiceClient) Stop(ctx context.Context, in *bfgateway.BfVoid, opts ...grpc.CallOption) (*bfgateway.BfVoid, error) {
	out := new(bfgateway.BfVoid)
	err := grpc.Invoke(ctx, "/bfcta.BfCtaService/Stop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BfCtaService service

type BfCtaServiceServer interface {
	// 请求push
	ConnectPush(*bfgateway.BfConnectPushReq, BfCtaService_ConnectPushServer) error
	// 断开push
	DisconnectPush(context.Context, *bfgateway.BfVoid) (*bfgateway.BfVoid, error)
	// 活跃检测=
	Ping(context.Context, *bfgateway.BfPingData) (*bfgateway.BfPingData, error)
	// 开始cta
	Start(context.Context, *bfgateway.BfVoid) (*bfgateway.BfVoid, error)
	// 停止cta
	Stop(context.Context, *bfgateway.BfVoid) (*bfgateway.BfVoid, error)
}

func RegisterBfCtaServiceServer(s *grpc.Server, srv BfCtaServiceServer) {
	s.RegisterService(&_BfCtaService_serviceDesc, srv)
}

func _BfCtaService_ConnectPush_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(bfgateway.BfConnectPushReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BfCtaServiceServer).ConnectPush(m, &bfCtaServiceConnectPushServer{stream})
}

type BfCtaService_ConnectPushServer interface {
	Send(*google_protobuf.Any) error
	grpc.ServerStream
}

type bfCtaServiceConnectPushServer struct {
	grpc.ServerStream
}

func (x *bfCtaServiceConnectPushServer) Send(m *google_protobuf.Any) error {
	return x.ServerStream.SendMsg(m)
}

func _BfCtaService_DisconnectPush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(bfgateway.BfVoid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfCtaServiceServer).DisconnectPush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bfcta.BfCtaService/DisconnectPush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfCtaServiceServer).DisconnectPush(ctx, req.(*bfgateway.BfVoid))
	}
	return interceptor(ctx, in, info, handler)
}

func _BfCtaService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(bfgateway.BfPingData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfCtaServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bfcta.BfCtaService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfCtaServiceServer).Ping(ctx, req.(*bfgateway.BfPingData))
	}
	return interceptor(ctx, in, info, handler)
}

func _BfCtaService_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(bfgateway.BfVoid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfCtaServiceServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bfcta.BfCtaService/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfCtaServiceServer).Start(ctx, req.(*bfgateway.BfVoid))
	}
	return interceptor(ctx, in, info, handler)
}

func _BfCtaService_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(bfgateway.BfVoid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfCtaServiceServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bfcta.BfCtaService/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfCtaServiceServer).Stop(ctx, req.(*bfgateway.BfVoid))
	}
	return interceptor(ctx, in, info, handler)
}

var _BfCtaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bfcta.BfCtaService",
	HandlerType: (*BfCtaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DisconnectPush",
			Handler:    _BfCtaService_DisconnectPush_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _BfCtaService_Ping_Handler,
		},
		{
			MethodName: "Start",
			Handler:    _BfCtaService_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _BfCtaService_Stop_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ConnectPush",
			Handler:       _BfCtaService_ConnectPush_Handler,
			ServerStreams: true,
		},
	},
}

var fileDescriptor0 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xab, 0xb4, 0x1e, 0x52, 0x51, 0x0c, 0x7a, 0x30, 0xde, 0x2a, 0x5e, 0x13, 0x51, 0x10,
	0xaf, 0xb6, 0xfb, 0x00, 0xc5, 0x05, 0x0f, 0xde, 0x26, 0x31, 0x49, 0x03, 0x36, 0xb3, 0xee, 0x4e,
	0x2c, 0x7d, 0x22, 0x5f, 0xd3, 0x98, 0x2a, 0xb5, 0xe8, 0x61, 0x8f, 0xf3, 0xfd, 0x7f, 0xbe, 0x30,
	0xc3, 0xc6, 0xda, 0x19, 0x02, 0xd9, 0xb4, 0x48, 0xc8, 0x47, 0x65, 0x10, 0xc7, 0xda, 0x79, 0x20,
	0xbb, 0x82, 0xf5, 0x86, 0x8b, 0x73, 0x8f, 0xe8, 0x5f, 0xad, 0x2a, 0x93, 0x4e, 0x4e, 0x41, 0xfc,
	0x8e, 0x6e, 0x3e, 0xf6, 0xd9, 0xe1, 0xd4, 0xcd, 0x08, 0x6a, 0xdb, 0xbe, 0x07, 0x63, 0x79, 0xc5,
	0xc6, 0x33, 0x8c, 0xd1, 0x1a, 0x9a, 0xa7, 0x6e, 0xc1, 0x2f, 0xe4, 0x56, 0x96, 0x7b, 0xdb, 0xe4,
	0xd1, 0xbe, 0x89, 0x53, 0xb9, 0x11, 0xcb, 0x1f, 0xb1, 0x7c, 0x88, 0xeb, 0xc9, 0xe0, 0x7a, 0x8f,
	0xdf, 0xb3, 0xa3, 0x2a, 0x74, 0xe6, 0x97, 0xe8, 0x64, 0x47, 0xf4, 0x84, 0xe1, 0x45, 0xfc, 0x45,
	0x93, 0x01, 0xbf, 0x63, 0xc3, 0x79, 0x88, 0x9e, 0x9f, 0xed, 0x84, 0x5f, 0xa8, 0x82, 0xbc, 0xdb,
	0xff, 0x38, 0xbf, 0x53, 0x6c, 0x54, 0x13, 0xb4, 0xd4, 0xfb, 0x23, 0xc9, 0x86, 0x35, 0x61, 0xd3,
	0xb7, 0x3f, 0xbd, 0x7a, 0xbe, 0xf4, 0x81, 0x16, 0x49, 0x4b, 0x83, 0x4b, 0xd5, 0xa5, 0xb8, 0x82,
	0xe8, 0x97, 0x56, 0xe5, 0x2a, 0x2a, 0x68, 0x82, 0x2a, 0xc7, 0xd7, 0x07, 0xe5, 0x16, 0xb7, 0x9f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x86, 0x33, 0xc3, 0x99, 0x01, 0x00, 0x00,
}
